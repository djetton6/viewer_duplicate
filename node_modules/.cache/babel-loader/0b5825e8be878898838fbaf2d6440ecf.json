{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Desmend Jetton\\\\Documents\\\\GitHub\\\\viewer_duplicate\\\\src\\\\app\\\\Settings\\\\CoinTile.js\";\nimport React from \"react\";\nimport { AppContext } from \"../AppProvider\";\nimport { SelectableTile, DisabledTile, DeletableTile } from \"../Shared/Tile\";\nimport CoinHeaderGrid from \"./CoinHeaderGrid\";\nimport CoinImage from \"../Shared/CoinImage\";\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\n  return topSection ? () => {\n    removeCoin(coinKey);\n  } : () => {\n    addCoin(coinKey);\n  };\n}\n\nexport default function ({\n  coinKey,\n  topSection\n}) {\n  return React.createElement(AppContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, ({\n    coinList,\n    addCoin,\n    removeCoin,\n    isInFavorites\n  }) => {\n    let coin = coinList[coinKey];\n    let TileClass = SelectableTile;\n\n    if (topSection) {\n      TileClass = DeletableTile;\n    } else if (isInFavorites(coinKey)) {\n      TileClass = DisabledTile;\n    }\n\n    return React.createElement(TileClass, {\n      onClick: clickCoinHandler(topSection, coinKey, addCoin, removeCoin),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(CoinHeaderGrid, {\n      topSection: topSection,\n      name: coin.CoinName,\n      symbol: coin.Symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(CoinImage, {\n      coin: coin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  });\n}","map":{"version":3,"sources":["C:/Users/Desmend Jetton/Documents/GitHub/viewer_duplicate/src/app/Settings/CoinTile.js"],"names":["React","AppContext","SelectableTile","DisabledTile","DeletableTile","CoinHeaderGrid","CoinImage","clickCoinHandler","topSection","coinKey","addCoin","removeCoin","coinList","isInFavorites","coin","TileClass","CoinName","Symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,OAAtC,EAA+CC,OAA/C,EAAwDC,UAAxD,EAAoE;AAClE,SAAOH,UAAU,GACb,MAAM;AACJG,IAAAA,UAAU,CAACF,OAAD,CAAV;AACD,GAHY,GAIb,MAAM;AACJC,IAAAA,OAAO,CAACD,OAAD,CAAP;AACD,GANL;AAOD;;AAED,eAAe,UAAS;AAAEA,EAAAA,OAAF;AAAWD,EAAAA;AAAX,CAAT,EAAkC;AAC/C,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEI,IAAAA,QAAF;AAAYF,IAAAA,OAAZ;AAAqBC,IAAAA,UAArB;AAAiCE,IAAAA;AAAjC,GAAD,KAAsD;AACrD,QAAIC,IAAI,GAAGF,QAAQ,CAACH,OAAD,CAAnB;AAEA,QAAIM,SAAS,GAAGb,cAAhB;;AACA,QAAIM,UAAJ,EAAgB;AACdO,MAAAA,SAAS,GAAGX,aAAZ;AACD,KAFD,MAEO,IAAIS,aAAa,CAACJ,OAAD,CAAjB,EAA4B;AACjCM,MAAAA,SAAS,GAAGZ,YAAZ;AACD;;AACD,WACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEI,gBAAgB,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,EAA+BC,UAA/B,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,IAAI,EAAEM,IAAI,CAACE,QAFb;AAGE,MAAA,MAAM,EAAEF,IAAI,CAACG,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD,GAtBH,CADF;AA0BD","sourcesContent":["import React from \"react\";\r\nimport { AppContext } from \"../AppProvider\";\r\nimport { SelectableTile, DisabledTile, DeletableTile } from \"../Shared/Tile\";\r\nimport CoinHeaderGrid from \"./CoinHeaderGrid\";\r\nimport CoinImage from \"../Shared/CoinImage\";\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\r\n  return topSection\r\n    ? () => {\r\n        removeCoin(coinKey);\r\n      }\r\n    : () => {\r\n        addCoin(coinKey);\r\n      };\r\n}\r\n\r\nexport default function({ coinKey, topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavorites }) => {\r\n        let coin = coinList[coinKey];\r\n\r\n        let TileClass = SelectableTile;\r\n        if (topSection) {\r\n          TileClass = DeletableTile;\r\n        } else if (isInFavorites(coinKey)) {\r\n          TileClass = DisabledTile;\r\n        }\r\n        return (\r\n          <TileClass\r\n            onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\r\n          >\r\n            <CoinHeaderGrid\r\n              topSection={topSection}\r\n              name={coin.CoinName}\r\n              symbol={coin.Symbol}\r\n            />\r\n            <CoinImage coin={coin} />\r\n          </TileClass>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}